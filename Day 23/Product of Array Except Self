--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Question
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.
You must write an algorithm that runs in O(n) time and without using the division operation.

Example 1:

Input: nums = [1,2,3,4]
Output: [24,12,8,6]
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
    public int[] productExceptSelf(int[] nums) {
              int[] result = new int[nums.length];
 
    result[nums.length-1]=1;
    for(int i=nums.length-2; i>=0; i--){
        result[i]=result[i+1]*nums[i+1];
    }
 
    int left=1;
    for(int i=0; i<nums.length; i++){
        result[i]=result[i]*left;
        left = left*nums[i];
    }
 
    return result;
    }
}
