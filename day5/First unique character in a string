----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Question 7
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

Example 1:

Input: s = "leetcode"
Output: 0

Example 2:

Input: s = "loveleetcode"
Output: 2

Example 3:

Input: s = "aabb"
Output: -1
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
    public int firstUniqChar(String s) {
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        for(int i=0; i<s.length(); i++){
            char current = s.charAt(i);
            if(!map.containsKey(current)){
                map.put(current, i);
            }
            else{
                map.put(current, -1);
            }
        }    
        int min = Integer.MAX_VALUE;
        for(char c : map.keySet()){
            if(map.get(c) > -1 && map.get(c) < min){
                min = map.get(c);
            }
        }
        return min == Integer.MAX_VALUE ? -1 : min;
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Accepted Runtime: 0 ms
Case 1

Input
s = "leetcode"
Output
0
Expected
0
